name: Build for applicable OS

on:
  push:
    #branches: [master]

jobs:
  build:
    if: ${{ !startsWith(github.event.head_commit.message, '[Github Actions]') }} # Prevent recursive builds
    strategy:
      matrix:
        node: [12.x]
        os: [ubuntu-18.04, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: install node-gyp
        run: npm install --global node-gyp@8.2.0

      - name: install prebuildify
        run: npm install --global prebuildify@4.2.1

      - name: prebuild binary files
        run: prebuildify --napi --strip

      - run: mv -f ./prebuilds/linux-x64/node.napi.node ./prebuilds/linux-x64/bigint_buffer.node
        if: startsWith(matrix.os, 'ubuntu')
      - run: mv -f ./prebuilds/darwin-x64/node.napi.node ./prebuilds/darwin-x64/bigint_buffer.node
        if: startsWith(matrix.os, 'macos')
      - run: mv -Force ./prebuilds/win32-x64/node.napi.node ./prebuilds/win32-x64/bigint_buffer.node
        if: startsWith(matrix.os, 'windows')

      - name: Upload prebuild-assets
        uses: actions/upload-artifact@v2
        with:
          name: prebuilds-${{ matrix.os }}-x64
          path: prebuilds

  aggregate_binaries:
    needs: build
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: download ubuntu-18.04 binaries
        uses: actions/download-artifact@v2
        with:
          name: prebuilds-ubuntu-18.04-x64

      - name: download windows-latest binaries
        uses: actions/download-artifact@v2
        with:
          name: prebuilds-windows-latest-x64

      - name: download macos-latest binaries
        uses: actions/download-artifact@v2
        with:
          name: prebuilds-macos-latest-x64

      - run: cp -f linux-x64 binaries
      - run: cp -f win32-x64 binaries
      - run: cp -f darwin-x64 binaries

  run_tests:
    needs: aggregate_binaries
    strategy:
      matrix:
        node: [10.x, 11.x, 12.x, 13.x, 14.x, 15.x, 16.x]
        os: [ubuntu-18.04, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - run: npm ci
      - run: npm run fix
      - run: npm run pretest
      - run: npm run test
      - run: npm run posttest

      # - name: configure Git
      #   run: |
      #     git config --global user.email "micaiahreid@gmail.com"
      #     git config --global user.name "Micaiah Reid"

      # - run: git add binaries
      # - run: git commit -m "[GitHub Actions] Updated binaries."
      # - run: git push origin
